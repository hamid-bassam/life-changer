// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        String @id
  kindeId   String @unique
  email     String @unique
  firstName String
  lastName  String
  notes     Note[] // Relation avec le modèle Note
  goals     Goal[] // Relation avec le modèle Goal
  tasks     Task[] // Relation avec le modèle Task
}

model Note {
  id          String  @id @default(uuid())
  title       String
  document    Json?   @db.Json // Peut être utilisé pour stocker le contenu des notes en format HTML/Markdown/Plain Text
  htmlContent String?
  // Relation avec User

  // Timestamps
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User?   @relation(fields: [userId], references: [id])
  userId String?
}

model Goal {
  id           String   @id @default(cuid())
  title        String
  description  String?
  status       String   @default("pending")
  priority     Int
  dueDate      DateTime?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  userId       String
  user         User     @relation(fields: [userId], references: [id])
  parentGoalId String?
  parentGoal   Goal?    @relation("GoalToSubGoals", fields: [parentGoalId], references: [id])
  subGoals     Goal[]   @relation("GoalToSubGoals")
  tasks        Task[]

  @@index([userId])
  @@index([parentGoalId])
}

model Task {
  id          String   @id @default(cuid())
  title       String
  description String?
  status      String   @default("pending")
  dueDate     DateTime?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  goalId      String?
  goal        Goal?    @relation(fields: [goalId], references: [id])
  userId      String
  user        User     @relation(fields: [userId], references: [id])

  @@index([goalId])
  @@index([userId])
}
